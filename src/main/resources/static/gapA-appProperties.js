window.onload = function(){
//Gap Analysis Variables
var gaPdf_title = 'CI/CD Maturity Analysis';
var gaReport_title ='CI/CD Maturity Analysis Report';
var sec1_head = 'Build Management And Continuous Integration';
var sec2_head = 'Environment and Deployment';
var sec3_head = 'Release Management and Compliance';
var sec4_head = 'Testing';
var gapAnalysis_startText = 'This DIY assessment will provide guidance to you on how to make Continuous Delivery work within your organization. Thank you for using this survey. Here is where you stand in terms of the maturity of your processes around Build management and continuous integration, Environments and deployment, Release management and compliance, and Testing. ';
var gapAnalysis_secondText = 'Please have a look at our recommendation and guidance for you to mature your practices progressively.';

var gapAnalysis_last1Text = 'This survey is based on a maturity model recommended in “Continuous Delivery” by Jez Humble and David Farley. The best practices for different practices such as 1. Build management and continuous integration 2. Environments and deployment 3. Release Management and compliance 4. Testing have been identified and mapped to the maturity levels against these practices. Based on your current state of practice for these areas, the DIY assessment ascertains your current level of maturity and makes a recommendation for reaching progressively to the next higher level for each of the areas.';

var gapAnalysis_last2Text = 'This survey is not intended to perform an in-depth CI/CD maturity gap assessment. This is intended for the practitioners to understand their current practices across different areas and map them to a maturity level. The practitioner(s) who are taking the survey are already initiated into Agile, CI/CD environments. The practitioner(s) who are taking this survey are consulting with their counterparts in other departments to ascertain the practices. This will help to arrive at a more realistic assessment.';

var gapAnalysis_last3Text = 'Our senior consultants can help get a more cutomized gap analysis report for you based on study lot more factors. Please reach out to us so that one of our senior consultants can talk to you.';
var gapAnalysis_last1Head ='Approach';
var gapAnalysis_last2Head = 'Assumptions';

var sec1_rating1_text = 'At this level you are using manual processes for building the code. We recommend that you use a version control repository and start check-in code, tests, database scripts, build and deployment scripts and all the things needed to create, install, run and test your application. Start using a CI system and establish good CI practices and build commitment and discipline form your team.';
var sec1_rating2_text  ='At this level you are able to perform automated builds and testing on a regular basis. We recommend you establish processes to perform automated build and test cycles every time a change is committed. Start using artifact repositories in your deployment pipeline and store artifacts generated by the build process into the repositories and be able to retrieve them for later use. Start using the build dependency management tools.';
var sec1_rating3_text = 'At this level you have a consistent build management continuous integration process and an efficient deployment pipeline. Congratulations! Now you should start working on providing software delivery visibility into progress of builds from check-in to release. Start measuring software delivery cycle time, automated test coverage, number of commits to the version control system per day, builds per day, number of build failures per day, duration of build including automated tests.';
var sec1_rating4_text = 'At this level you are gathering variety of build metrics and making them visible and acting upon them. Start collating the results and start monitoring them across every team, across all of the projects in your development program and whole of your organization. Make the feedback cycles short and measure continually.';
var sec1_rating5_text = 'At this level, your teams are meeting regularly and discussing the integration problems and resolve them with automation, faster feedback and better visibility. Keep up the good work!';
var sec1_rating0_text = 'Build Management And Continuous Integration - rating 0. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley.';

var sec2_rating1_text = 'At this level you are using manual processes for provisioning the environments and deploying the software. We recommend that you do not use environment specific binaries. Start building practices for deploying the application in a reliable and consistent manner. Automate the deployment by writing scripts starting with a deployment to test environment. ';
var sec2_rating2_text = 'At this level you are able to perform automated deployments to some environments and are able to use the same deployment scripts for different environments. Ensure that you are building your binaries only once. All the configurations are versioned and externalized.';
var sec2_rating3_text = 'At this level you have a consistent and fully automated self-service push button process for deploying software and process to deploy to every environment. Start building practices to achieve rolling back deployments swiftly and zero-downtime releases. Experiment with blue-green deployments, canary release process';
var sec2_rating4_text = 'At this level you have fully managed and orchestrated deployments. Your release and roll-back processes have been fully tested. Ensure that you have practices institutionalized so that each change is propagating through the pipeline instantly and start utilizing environment utilization to help provide a controlled fully repeatable deployment and release process.';
var sec2_rating5_text = 'At this level, your teams are are managing all environments effectively. Provisioning is fully automated and leveraging environment virtualization effectively. Keep up the good work!';
var sec2_rating0_text = 'Environment and Deployment - rating 0';

var sec3_rating1_text = 'At this level you have infrequent and unreliable releases. We recommend that application stakeholders get together and create a pragmatic release strategy and release plan and work towards achieving limited traceability from requirements to release.';
var sec3_rating2_text = 'At this level you have somewhat painful and infrequent but reliable releases. And you have limited traceability from requirements to release. Start defining change management and approval processes keeping in mind regulatory and compliance conditions (applicable).';
var sec3_rating3_text = 'At this level you have defined what stages a build has to go through in order to be released (integration testing, QA acceptance testing, UAT, staging, production), what the required gates or approval are and for each gate who has the authority to approve a build passing through that gate. Start working on processes and infrastructure to monitor environment and application health and release cycle time.';
var sec3_rating4_text = 'At this level you have your environment and application health monitored and proactive managed. Start institutionalizing regular meetings between your operations and delivery teams to manage risks and reduce cycle time.';
var sec3_rating5_text = 'At this level, your teams are are holding regular retrospectives on the system, inviting representatives from delivery and operations and work to improve the system based on feedback from these retrospectives. Keep up the good work. ';
var sec3_rating0_text = 'Release Management and Compliance - rating 0';

var sec4_rating1_text = 'At this level you are performing manual testing after the development is complete. It is time for your teams to investigate the ‘Agile Testing Quadrants’ and develop business facing tests that support the development process, technology facing tests that support the development process, business facing tests that critique the project, technology facing tests that critique the project. Start understand ATDD, BDD approaches and shift-left test automation.';
var sec4_rating2_text = 'At this level you have automated tests written as part of your story development. Start building your commit stage tests from unit tests, monitor the most common failures and add specific tests to commit stage test suite to find such failures early on. Ensure quality metrics through commit stage. Start building acceptance tests that assert the behavior of the system and non-functional (capacity tests and security tests) that test specific real world scenarios.';
var sec4_rating3_text = 'At this level you have good and fast executing automated unit tests and automated acceptance tests using which you assert each release candidate. Testing is an integrated part of the development process. Start having a predefined threshold for success, so that we can assert that they passed.';
var sec4_rating4_text = 'At this level you have quality metrics and trends tracked. Non-functional requirements defined and measured. Start establishing shift-right testing strategies and provide early, frequent feedback to the delivery teams so that defects are found and fixed immediately.';
var sec4_rating5_text = 'At this level, production rollback are rare. You have achieved dependable, fast executing  test automation covering most of the agile testing quadrants and effective exploratory testing adding value to the quality. Keep up the good work.';
var sec4_rating0_text = 'Testing - rating 0 Lorem Ipsum has been the industrys standard dummy text ever since the 1500s';


localStorage.setItem("gaPdf_title",gaPdf_title);

localStorage.setItem("sec1_head",sec1_head);
localStorage.setItem("sec2_head",sec2_head);
localStorage.setItem("sec3_head",sec3_head);
localStorage.setItem("sec4_head",sec4_head);

localStorage.setItem("gaReport_title",gaReport_title);
localStorage.setItem("gapAnalysis_startText",gapAnalysis_startText);	
localStorage.setItem("gapAnalysis_secondText",gapAnalysis_secondText);
localStorage.setItem("gapAnalysis_last1Text",gapAnalysis_last1Text);
localStorage.setItem("gapAnalysis_last2Text",gapAnalysis_last2Text);
localStorage.setItem("gapAnalysis_last3Text",gapAnalysis_last3Text);

localStorage.setItem("gapAnalysis_last1Head",gapAnalysis_last1Head);
localStorage.setItem("gapAnalysis_last2Head",gapAnalysis_last2Head);

localStorage.setItem("sec1_rating1_text",sec1_rating1_text);
localStorage.setItem("sec1_rating2_text",sec1_rating2_text);
localStorage.setItem("sec1_rating3_text",sec1_rating3_text);
localStorage.setItem("sec1_rating4_text",sec1_rating4_text);
localStorage.setItem("sec1_rating5_text",sec1_rating5_text);
localStorage.setItem("sec1_rating0_text",sec1_rating0_text);

localStorage.setItem("sec2_rating1_text",sec2_rating1_text);
localStorage.setItem("sec2_rating2_text",sec2_rating2_text);
localStorage.setItem("sec2_rating3_text",sec2_rating3_text);
localStorage.setItem("sec2_rating4_text",sec2_rating4_text);
localStorage.setItem("sec2_rating5_text",sec2_rating5_text);
localStorage.setItem("sec2_rating0_text",sec2_rating0_text);

localStorage.setItem("sec3_rating1_text",sec3_rating1_text);
localStorage.setItem("sec3_rating2_text",sec3_rating2_text);
localStorage.setItem("sec3_rating3_text",sec3_rating3_text);
localStorage.setItem("sec3_rating4_text",sec3_rating4_text);
localStorage.setItem("sec3_rating5_text",sec3_rating5_text);
localStorage.setItem("sec3_rating0_text",sec3_rating0_text);

localStorage.setItem("sec4_rating1_text",sec4_rating1_text);
localStorage.setItem("sec4_rating2_text",sec4_rating2_text);
localStorage.setItem("sec4_rating3_text",sec4_rating3_text);
localStorage.setItem("sec4_rating4_text",sec4_rating4_text);
localStorage.setItem("sec4_rating5_text",sec4_rating5_text);
localStorage.setItem("sec4_rating0_text",sec4_rating0_text);
}